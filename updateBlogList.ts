import fsp from "fs/promises";
import path from "path";
import voca from "voca";

async function updateBlogList() {
  const blogList = await (
    await fsp.readdir(path.join(__dirname, "app/routes/blog"))
  ).filter((blog) => blog.endsWith(".tsx") && blog !== "index.tsx");

  let blogListFile =
    "/** THIS FILE IS AUTOGENERATED, DO NOT MODIFY\n * UPDATE THIS FILE BY RUNNING yarn update-blog-list */\n\n";
  for (const blog of blogList) {
    const blogSlug = blog.replace(".tsx", "");
    blogListFile += `import { meta as ${voca.camelCase(
      blogSlug
    )}Meta } from "~/routes/blog/${blogSlug}";\n`;
  }

  for (const blog of blogList) {
    const slug = blog.replace(".tsx", "");
    const varName = voca.camelCase(slug);
    blogListFile += `\nconst ${varName} = { ...${varName}Meta, slug: "${slug}" };\n`;
    blogListFile += `export { ${varName} };\n`;
  }

  const outputPath = path.join(__dirname, "./app/blogPosts.tsx");
  await fsp.writeFile(outputPath, blogListFile);
}
updateBlogList();

export {};
